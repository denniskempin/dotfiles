#!/bin/bash
set -ex
cd "$(dirname "$0")"

# Don't use sudo if run as root already. Some containers won't have it.
if [ "$EUID" -eq 0 ]; then
  sudo() {
    "$@"
  }
fi

################################################################################
# Common

# Packages with identical names on homebrew and debian/ubuntu
COMMON_PACKAGES=(
    fish
    thefuck # Corrects common command mistakes (e.g. prepending sudo)
    tldr    # tldr versins of man pages
    bat      # better cat
)

install_cargo_packages() {
  # Install rustup
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  source $HOME/.cargo/env

  packages=(

  )
  cargo install --locked "${packages[@]}"
}

setup_fish() {
  # Link config files
  mkdir -p ~/.config/fish/
  ln -sf "$(pwd)/fish/config.fish" ~/.config/fish/config.fish
  ln -sf "$(pwd)/fish/fish_plugins" ~/.config/fish/fish_plugins
  ln -sf "$(pwd)/fish/starship.toml" ~/.config/starship.toml

  # Using fish as a login shell can be problematic since it is not POSIX
  # compliant. So instead we make bash call fish for interactive shells.
  ln -sf "$(pwd)/fish/bashrc" ~/.bash_profile
  ln -sf "$(pwd)/fish/bashrc" ~/.bashrc

  # Install fisher plugins
  fish -c "curl -sL https://git.io/fisher | source && fisher update"

  # Install starship prompt
  sh -c "$(curl -fsSL https://starship.rs/install.sh)" -- -y
}

################################################################################
# OSX specific

setup_vscode() {
  ln -sf "$(pwd)/vscode/keybindings.json" ~/Library/Application\ Support/Code/User/keybindings.json
  ln -sf "$(pwd)/vscode/settings.json" ~/Library/Application\ Support/Code/User/settings.json
}

setup_iterm2() {
  # Tell iterm2 to use the settings file in `./iterm2`
  defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "$(pwd)/iterm2"
  defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
}

install_osx_packages() {
  if ! command -v brew; then
    echo "Skipping homebrew packages"
    return
  fi
  packages=(
    "${COMMON_PACKAGES[@]}"
    grc     # generic colorizer for standard commands
    fd      # better find
    zoxide   # better cd (with fuzzy matching and autojump)
    exa      # better ls
  )
  brew install "${packages[@]}"

  brew tap homebrew/cask-fonts
  brew install --cask \
    font-fira-code
}

setup_osx() {
  install_cargo_packages
  install_osx_packages
  setup_vscode
  setup_iterm2
  setup_fish
}

################################################################################
# Linux specific

install_debian_packages() {
  packages=(
    "${COMMON_PACKAGES[@]}"
    fd-find  # better find
  )

  # These may not be available on older distributions
  optional_packages=(
    zoxide   # better cd (with fuzzy matching and autojump)
    exa      # better lsP
  )

  sudo apt update
  sudo apt install --yes "${packages[@]}"
  sudo apt install --yes "${optional_packages[@]}" || true

  # Install grc
  (
    cd /tmp && \
    wget http://kassiopeia.juls.savba.sk/~garabik/software/grc/grc_1.12-1_all.deb && \
    dpkg -i grc_1.12-1_all.deb
  )
}

setup_linux() {
  install_cargo_packages
  install_debian_packages
  setup_fish
}

################################################################################
# Main

main() {
  # Get sudo upfront so we don't need to ask later.
  sudo true

  case $OSTYPE in
  darwin*)
    setup_osx
    ;;
  *)
    setup_linux
    ;;
  esac
  echo "Success"
}
main
